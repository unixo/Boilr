{% extends 'BoilrBundle:Default:template5-base.html.twig' %}
{% import 'BoilrBundle:Common:macros.html.twig' as mymacro %}

{% block extra_header %}
    {% if person.addresses | length > 0 %}
        {{ vichgeo_include_js() }}
        {{ vichgeo_include_css() }}
    {% endif %}
{% endblock %}

{% block inner_block %}
<div class="span9">
  <div class="page-header">
    <h1>{{ person.fullName }} <small>Scheda anagrafica</small></h1>
  </div>

  <div id="tabs">
    <ul>
      <li><a href="#fragment-1"><span>Anagrafica</span></a></li>
      <li><a href="#tabAddresses"><span>Indirizzi</span></a></li>
      <li><a href="#fragment-3"><span>Impianti</span></a></li>
      <li><a href="#tabContracts"><span>Assistenza</span></a></li>
    </ul>
    <div id="fragment-1">
      {% include 'BoilrBundle:Person:_anag.html.twig' with { 'person': person, 'allFields': true } %}

      <div style="margin-top: 10px;">
        <a id="btnRegistry" class="btn btn-small" title="Modifica anagrafica">
          <i class="icon-pencil"></i> Modifica
        </a>
      </div>
    </div>
    <div id="tabAddresses">
        {% include 'BoilrBundle:Person:_addresses.html.twig' with { 'person': person, 'toolbar': true } %}

        {% if person.addresses | length > 0 %}
            <div>{{ vichgeo_map_for('location', person.addresses) }}</div>
            <div style="margin-top: 10px;">
                <button id="btnCenterMap" title="Centra" onClick="console.log(addressesMap.getZoom());addressesMap.fitBounds(addressesMapBounds);">centra</button>
            </div>
        {% endif %}
    </div>
    <div id="fragment-3">
        {% include 'BoilrBundle:Person:_systems.html.twig' with { 'person': person, 'toolbar': true } %}
    </div>
    <div id="tabContracts">
        {% include 'BoilrBundle:Person:_contracts.html.twig' with { 'person': person } %}

        {% if interventions | length > 0 %}
        <fieldset>
            <legend>Calendario prossimi interventi</legend>

            <table class="table table-condensed table-striped">
              <thead>
                <tr>
                  <th>Data</th>
                  <th>Stato</th>
                  <th>Impianto</th>
                  <th>Programmato</th>
                </tr>
              </thead>
              <tbody>
                {% for key,mi in interventions %}
                <tr class="{{ cycle(['odd', 'even'], key) }}">
                  <td>
                    <a href="{{ url('list_all_interventions', { year : mi.scheduledDate|date('Y'), month: mi.scheduledDate|date('m')} ) }}">
                      {{ mi.scheduledDate | date('d-m-Y H:i') }}
                    </a>
                  </td>
                  <td>{{ mi.getStatusDescr() }}</td>
                  <td>
                    {% spaceless %}
                      {% if mi.details|length == 1 %}
                        {{ mi.details[0].system.descr }}
                      {% else %}
                        {{ mi.details | length }} impianti
                      {% endif %}
                    {% endspaceless %}
                  </td>
                  <td>{{ mymacro.imgcheck_if_true(mi.isPlanned) }}</td>
                </tr>
                {% endfor %}
              </tbody>
            </table>
        {% endif %}

        {% if person.systems | length > 0 %}
        <div style="margin-top: 10px;">
            <a class="btn btn-small" id="btnAddUnplanned" title="Intervento non programmato">
              <i class="icon-time"></i> Aggiungi intervento non programmato
            </a>
        </div>
        {% endif %}
    </div>
</div>
</div>
{% endblock %}


{% block javascripts %}
<script type="text/javascript">
    /* <![CDATA[ */

    $(function() {
         $("#tabs").tabs({
                show: function(e, ui)
                      {
                        {# @todo: quando seleziono il tab degli indirizzi, la URL cambia #}
                        if (ui.panel.id == 'tabAddresses') {
                            $('#addressMapContainer').css('width', '100%');
                            google.maps.event.trigger(addressesMap, "resize");
                            addressesMap.fitBounds(addressesMapBounds);
                            {% if person.addresses | length == 1 %}
                            addressesMap.setZoom( addressesMap.getZoom()-6 );
                            {% endif %}
                         }
                      }
         });

         $('#btnRegistry').click(function(event) {
                                    window.location.href = '{{ url('person_registry_edit', {id: person.id}) }}';
                                });
         $('#btnCenterMap').button({ icons: { primary: "ui-icon-arrow-4-diag" }, text: false });
         $('#btnAddUnplanned').click(function(event) {
                                    window.location.href = '{{ url('unplanned_intervention_add', {id: person.id}) }}';
                              });
    });

    /* ]]> */
</script>
{% endblock %}